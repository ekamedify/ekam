---
export interface Props {
	title?: string;
	description?: string;
}
import "../global.css"
import '../../node_modules/sal.js/dist/sal.css';
const { 
	title = 'Best CBSE School in Bangalore | Ekam School',
	description = 'Ekam Edify is affiliated to CBSE. It is ranked amongst the top CBSE schools in Bangalore. Enquire Now for AY 2024-25.'
} = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<!-- <ViewTransitions /> -->

		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/x-icon" href="/favicon.ico">
		<!-- <link rel="stylesheet" href="node_modules/@glidejs/glide/dist/css/glide.core.min.css"> -->
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<meta name="description" content={description} />
		
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=DM+Sans:opsz,wght@9..40,400;9..40,500;9..40,700&family=DM+Serif+Display:ital@0;1&display=swap" rel="stylesheet">

		<!-- <link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" /> -->

		<!-- Google tag (gtag.js) -->
		<script async src="https://www.googletagmanager.com/gtag/js?id=G-3S55S9S24R"></script>
		<script>
			window.dataLayer = window.dataLayer || [];
			function gtag(){dataLayer.push(arguments);}
			gtag('js', new Date());

			gtag('config', 'G-3S55S9S24R');
		</script>
	</head>
	<body>
		<slot />

	</body>
</html>
<style is:global>
	:root {
		--accent: 124, 58, 237;
		--accent-gradient: linear-gradient(45deg, rgb(var(--accent)), #da62c4 30%, white 60%);
	}
	html {
		/* font-family: system-ui, sans-serif; */
		background-color: #fff;
		scroll-behavior:smooth;
	}
	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
			Bitstream Vera Sans Mono, Courier New, monospace;
	}

</style>

<script>
  // import sal from 'sal.js'

  // sal();
	// const observer = new IntersectionObserver((entries) => {
	// 	entries.forEach(entry => {
	// 		const isIntersecting = (
	// 			entry.isIntersecting
	// 		) || entry.target.classList.contains('daisy-fixed')
	// 		if (isIntersecting) {
	// 			entry.target.classList.add('daisy-show')
	// 		}
	// 	})
	// }, {
	// 	root: document.querySelector("#scroll-area")
	// })

	// const hiddenElements = document.querySelectorAll('.daisy')
	// hiddenElements.forEach(element => {
	// 	observer.observe(element)
	// })
</script>